/*
 * |--------------------------------------------------------------|
 * |                                                              |
 * |                   DO NOT DELETE THIS FILE!                   |
 * |                                                              |
 * |      THIS IS THE CORE APPLICATION FILE FOR WEB REQUESTS.     |
 * |                GENERATED BY STELCH WEB SERVER                |
 * |                                                              |
 * |--------------------------------------------------------------|
 */


var net = require('net');
var fs = require("fs");
const {gzip, ungzip} = require('node-gzip');
var sites = [];
var config = JSON.parse(fs.readFileSync("config.yml"));
var port = 443;

var colors = {
    "red":"\u001b[31m",
    "reset":"\u001b[0m",
    "green":"\u001b[32m",
    "yellow":"\u001b[33m",
    "blue":"\u001b[34m",
    "magenta":"\u001b[35m",
    "cyan":"\u001b[36m",
    "white":"\u001b[37m"
};

exports.start = function(logger,hostcache) {
    var socklist = {};
    var server = net.createServer(function(socket) {

        let domain = "";
        let host = null;
        let client = socket;

        client.on('data',(e)=>{
            if(host===null){
                for(i in hostcache){
                    if(e.toString('utf-8').indexOf(i)>-1){
                        host=net.connect({port: hostcache[i]},()=>{});
                        host.write(e);
                        host.on('data',(e)=>{client.write(e);});
                        host.on('close', ()=>{client.end(()=>{host.destroy()});});
                    }
                }
            }else {
                try {
                    host.write(e);
                }catch (e){
                    logger.log(`${colors.red}ERROR> ${colors.reset}${e.stack}`);
                }
            }
        });
    });
    server.on('error', function(error) {
        logger.log(`[${colors.red}ERROR${colors.reset} ${error.message}`);
    });
    server.listen(port, function() {
        logger.log(`[${colors.green}STARTED${colors.reset}] HTTPS Redirector has started on port ${port} and is accepting connections.\r\n`);
    });
};